
/*-----------------------------------------------------------------------------
 *  ************************工程使用说明***************************************
 *-----------------------------------------------------------------------------*/
    此工程模板基于官方（Micrium_STM32F103ZE-SK_uCOS-II  IAR版）工程修改，未经
严格测试，欢迎各位同学使用并指出bug，不尽感谢。使用过程中如有任何问题也欢迎电
邮。

                    bug report：killkeil54@gmail.com

tips:   在使用此工程之前推荐阅读由野火编写的《4、初识STM32库》由邵贝贝
        编写的《uCOS-II》,《STM32固件库使用手册》由宋岩翻译的
        《Cortex-M3权威指南》 以上4份文档都在放在工程中的doc目录

1.  工程模板的结构
2.  changelog
3.  致谢


        /*-----------------------------------------------------------------------------
         *              工程模板的结构 
         *-----------------------------------------------------------------------------*/
    1.1 目录结构

    解压工程模板之后，你将看到
    template/.
            ../app                  应用目录，包含main文件和其他工程配置文件
            ../boot                 ST官方提供的适用于各种chip的启动文件
            ../cmsis                ARM官方提供的对一些指令和一些内核寄存器操作的C语言封装
            ../doc                  包含此文件readme.txt,和一些个人认为比较实用的文档
            ../driver               对具体设备如串口、LCD等设备的驱动代码
            ../interrupt            中断服务代码，和其头文件
            ../library              ST官方提供的外设库文件
            ../list                 连接过程使用的目录
            ../obj                  编译结果输出目录
            ../ucos                 ucos源码

    note:   其中的boot，cmsis，library和ucos目录中的文件被设置为只读，防止错误的修改
            如有必要同学们也可以通过修改文件属性，来修改
            

    1.1.1 app目录
        ../app
            ../app_cfg.h            ucos应用配置文件，定义任务堆栈大小和任务优先级
            ../app_hooks.h          定义一些钩子函数，用于拓展ucos的功能         
            ../includes.h           工程总头文件几乎包含了工程中所有的头文件
            ../main.c               c入口，启动操作系统，添加任务
            ../os_cfg.h             ucos系统配置文件，通过修改参数可以实现对ucos的裁减
            ../stm32f10x_conf.h     ST库配置文件，可以使能库中某个外设
    note:   此目录中的文件全部需要根据具体的应用加以修改

    1.1.2 boot目录
        ../boot
            ../startup_stm32f10x_hd.s   由于我们的核心板上是F103ZET6芯片，属于增强型大容量芯片
            ..                          不同的芯片对应不同的启动文件    
        cl: 互连型，stm32f105/107   
        vl：超值型，stm32f100
        xl: 超高密度，f101/103且Flash大于512K
        ld：低密度，Flask小于64K
        md：中等密度，flash为64k或128K
        hd：高密度，flash为512k

    1.1.3 cmsis目录
        ../cmsis
            ../core_cm3.c               ARM提供了一些指令和内核寄存器操作的c语言封装
            ../core_cm3.h               
            ../stm32f10x.h              定义库函数版本，以及NVIC的一些寄存器和中断号
            ../system_stm32f10x.c       初始化系统时钟，重定向中断向量表
            ../system_stm32f10x.h
    note:   NVIC中断控制器也是m3内核的一部分

    1.1.4 interrupt目录
        ../interrupt
            ../stm32f10x_it.c           在此文件中编写中断服务函数
            ../stm32f10x_it.h               
    note:   中断服务函数名可以在启动文件中看到，编写中断服务函数时必须按照启动文件中
            的命名来编写服务函数。如外部中断0的服务函数名只能是 EXTI0_IRQHandler

    1.1.5 library目录
        ../library
            ../src                      外设库函数源码                     
            ../inc                      头文件
    note:   library目录中，src每个c文件在inc目录中都有对应的头文件。每个外设（模块）都有一个独立的C文件

    1.1.6 ucos目录
        ../ucos
            ../uc-CPU                   一些指令的C封装（非cmsis），如实现全局中断禁止的指令
            ../ucos-II                  
                ../ports                移植代码
                ../source               操作系统与平台无关代码

    1.1.7 keil工程文件组
        点击并打开工程文件之后，可以在keil（MDK）中看到，工程中的文件组在一定程度上是和磁盘上文件目
        录是一一对应的。在此不再赘述。


        
        /*-----------------------------------------------------------------------------
         *                      changelog
         *-----------------------------------------------------------------------------*/
        由于一些对文件的组织和部分代码的删除过程较多，对应整个工程的后期修改没有什么意义
        在此就不列出。对文件内容的修改如下：
        /*-----------------------2012.02.04--------------------------------------------*/
        1. PendSVHandler --> OS_CPU_PendSVHandler @ startup_stm32f10x_hd.s  L78
        2. SysTickHandler --> OS_CPU_SysTickHandler @ startup_stm32f10x_hd.s    L79    
        3. RSEG CODE:CODE:NOROOT(2) --> AREA |.text|, CODE, READONLY, ALIGN=2
		                            --> THUMB
		                            --> REQUIRE8
	                    	        --> PRESERVE8
                                    @ OS_CPU_A.ASM L54
        4. 定义 OS_CPU_SysTickClkFreq()，直接给出系统主频 @ OS_CPU_C.C 
        5. 编写main.c，启动系统和调度 
        6. 编写sci.c，确认系统的正常运行

        /*-----------------------------------------------------------------------------
         *                      致谢
         *-----------------------------------------------------------------------------*/
